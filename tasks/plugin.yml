---
- name: Wait for Jenkins to start up
  uri:
    url: '{{ jenkins_master_url }}'
    status_code: 200
    timeout: 5
  register: jenkins_service_status
  # Keep trying for 5 mins in 5 sec intervals
  retries: 60
  delay: 5
  until: >
     'status' in jenkins_service_status and
     jenkins_service_status['status'] == 200
    
- name: Install plugins without a specific version
  jenkins_plugin:
    name: '{{ item.name }}'
  register: jenkins_unversioned_plugins
  when: item.version is not defined
  with_items: '{{ jenkins_master_plugins }}'

- name: Install plugins with a specific version
  jenkins_plugin:
    name: '{{ item.name }}'
    version: '{{ item.version }}'
  register: jenkins_versioned_plugins
  when: item.version is defined
  with_items: '{{ jenkins_master_plugins }}'

- name: Initiate the fact
  set_fact:
    jenkins_restart_required: no

- name: Check if restart is required by any of the versioned plugins
  set_fact:
    jenkins_restart_required: yes
  when: item.changed
  with_items: '{{ jenkins_versioned_plugins.results }}'

- name: Check if restart is required by any of the unversioned plugins
  set_fact:
    jenkins_restart_required: yes
  when: item.changed
  with_items: '{{ jenkins_unversioned_plugins.results }}'

- name: Restart Jenkins if required
  service:
    name: jenkins
    state: restarted
  when: jenkins_restart_required

- name: Wait for Jenkins to start up
  uri:
    url: '{{ jenkins_master_url }}'
    status_code: 200
    timeout: 5
  register: jenkins_service_status
  # Keep trying for 5 mins in 5 sec intervals
  retries: 60
  delay: 5
  until: >
     'status' in jenkins_service_status and
     jenkins_service_status['status'] == 200
  when: jenkins_restart_required

- name: Reset the fact
  set_fact:
    jenkins_restart_required: no
  when: jenkins_restart_required

- name: Plugin pinning
  jenkins_plugin:
    name: '{{ item.name }}'
    state: "{{ 'pinned' if item.pinned else 'unpinned'}}"
  when: item.pinned is defined
  with_items: '{{ jenkins_master_plugins }}'

- name: Plugin enabling
  jenkins_plugin:
    name: '{{ item.name }}'
    state: "{{ 'enabled' if (item.enabled or item.enabled is not defined) else 'disabled'}}"
  when: item.enabled is defined
  with_items: '{{ jenkins_master_plugins }}'

- name: copy plugin dependency resolver script
  template:
    src: install_jenkins_plugins.sh.j2
    dest: /tmp/install_jenkins_plugins.sh
    mode: 0775

- name: install missing plugin dependencies
  shell: /tmp/install_jenkins_plugins.sh
  when: jenkins_restart_required
